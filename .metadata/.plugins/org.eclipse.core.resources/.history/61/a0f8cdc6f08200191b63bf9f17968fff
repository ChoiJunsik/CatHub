import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;

import javax.net.ssl.SSLSocket;
public class ServerRecv extends Thread{
	//필드
	SSLSocket socket;
    String path = System.getProperty("user.home") + "\\Desktop\\catHubServer";
    DataOutputStream dos;
    FileInputStream fis;
    BufferedInputStream bis;
	//생성자
	public ServerRecv(SSLSocket socket) {
		this.socket = socket;
	}
	//메소드
	@Override
	public void run() {
		try {
			BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));
			PrintWriter writer = new PrintWriter(socket.getOutputStream());
            dos = new DataOutputStream(socket.getOutputStream());

			while(true) {
				String output ="";
				String str = reader.readLine();//데이타의 한줄 구분 '\r\n'
				if(str==null) { break;}//입력받은 값이 없으면 반복문 종료
				else if(str.equals("ls")) {
					File dirFile=new File(path);
					File []fileList=dirFile.listFiles();
					for(File tempFile : fileList) {
					  if(tempFile.isFile()) {
					    String tempPath=tempFile.getParent();
					    String tempFileName=tempFile.getName();
					    output += tempPath+"\\"+tempFileName+"\r\n";
					  }
					}
				    writer.print(output);
				    writer.println("end");
				    writer.flush();//버퍼내의 데이타 밀어내기
				}
				else if(str.equals("pull")) {
					File dirFile=new File(path);
					File []fileList=dirFile.listFiles();
				    dos.writeUTF(Integer.toString(fileList.length));
					dos.flush();
					for(File tempFile : fileList) {
					  if(tempFile.isFile()) {
					    String tempPath=tempFile.getParent();
					    String tempFileName=tempFile.getName();
			            dos.writeUTF(tempFileName);
						dos.flush();//버퍼내의 데이타 밀어내기
			            // 파일 내용을 읽으면서 전송
			            try {
			            File f = new File(tempPath+"\\"+tempFileName);
			            fis = new FileInputStream(f);
			            bis = new BufferedInputStream(fis);
			  
			            int len;
			            int size = 8192;
			            byte[] data = new byte[size];
			            while ((len = bis.read(data)) != -1) {
			                dos.write(data, 0, len);
			            }
			  
			            dos.flush();
						fis.close();
						bis.close();
			            System.out.println("완료");
			            } catch (IOException e) {
			            	e.printStackTrace();}
			          }
					  while(true) {System.out.println("너도");}
					}
				}
				else if(str.equals("push")) {
					writer.println("대충 클라폴더 업로드라는 뜻");//bye가 아니면 메세지 전송
				    writer.println("end");
					writer.flush();//버퍼내의 데이타 밀어내기
				}	
				else{
					writer.println("404");//bye가 아니면 메세지 전송
					writer.flush();//버퍼내의 데이타 밀어내기
				}
			   System.out.println("수신>"+str);//수신메세지 출력

			}
		}catch(Exception e) {
			System.out.println(e.getMessage());
		}
	}
	
	
	
}
